// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Serialization
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct Order : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static Order GetRootAsOrder(ByteBuffer _bb) { return GetRootAsOrder(_bb, new Order()); }
  public static Order GetRootAsOrder(ByteBuffer _bb, Order obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Order __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Serialization.MessageID MessageID { get { int o = __p.__offset(4); return o != 0 ? (Serialization.MessageID)__p.bb.Get(o + __p.bb_pos) : Serialization.MessageID.None; } }
  public sbyte PlayerID { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetSbyte(o + __p.bb_pos) : (sbyte)0; } }
  public int OrderValue1 { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)-1; } }
  public int OrderValue2 { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)-1; } }

  public static Offset<Serialization.Order> CreateOrder(FlatBufferBuilder builder,
      Serialization.MessageID MessageID = Serialization.MessageID.None,
      sbyte PlayerID = 0,
      int OrderValue1 = -1,
      int OrderValue2 = -1) {
    builder.StartTable(4);
    Order.AddOrderValue2(builder, OrderValue2);
    Order.AddOrderValue1(builder, OrderValue1);
    Order.AddPlayerID(builder, PlayerID);
    Order.AddMessageID(builder, MessageID);
    return Order.EndOrder(builder);
  }

  public static void StartOrder(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddMessageID(FlatBufferBuilder builder, Serialization.MessageID MessageID) { builder.AddByte(0, (byte)MessageID, 0); }
  public static void AddPlayerID(FlatBufferBuilder builder, sbyte PlayerID) { builder.AddSbyte(1, PlayerID, 0); }
  public static void AddOrderValue1(FlatBufferBuilder builder, int OrderValue1) { builder.AddInt(2, OrderValue1, -1); }
  public static void AddOrderValue2(FlatBufferBuilder builder, int OrderValue2) { builder.AddInt(3, OrderValue2, -1); }
  public static Offset<Serialization.Order> EndOrder(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Serialization.Order>(o);
  }
  public static void FinishOrderBuffer(FlatBufferBuilder builder, Offset<Serialization.Order> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedOrderBuffer(FlatBufferBuilder builder, Offset<Serialization.Order> offset) { builder.FinishSizePrefixed(offset.Value); }
};


}
