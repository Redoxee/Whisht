// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Serialization
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct Card : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static Card GetRootAsCard(ByteBuffer _bb) { return GetRootAsCard(_bb, new Card()); }
  public static Card GetRootAsCard(ByteBuffer _bb, Card obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Card __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Serialization.Sigil Family { get { int o = __p.__offset(4); return o != 0 ? (Serialization.Sigil)__p.bb.GetSbyte(o + __p.bb_pos) : Serialization.Sigil.Spade; } }
  public short Value { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetShort(o + __p.bb_pos) : (short)0; } }

  public static Offset<Serialization.Card> CreateCard(FlatBufferBuilder builder,
      Serialization.Sigil Family = Serialization.Sigil.Spade,
      short Value = 0) {
    builder.StartTable(2);
    Card.AddValue(builder, Value);
    Card.AddFamily(builder, Family);
    return Card.EndCard(builder);
  }

  public static void StartCard(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddFamily(FlatBufferBuilder builder, Serialization.Sigil Family) { builder.AddSbyte(0, (sbyte)Family, 0); }
  public static void AddValue(FlatBufferBuilder builder, short Value) { builder.AddShort(1, Value, 0); }
  public static Offset<Serialization.Card> EndCard(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Serialization.Card>(o);
  }
};


}
